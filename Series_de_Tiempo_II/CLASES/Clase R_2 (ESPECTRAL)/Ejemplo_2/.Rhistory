f=10*j^(-a)
plot(j,f, type="h")
a=0.1
j=1:1000
f=10*j^(-a)
plot(j,f, type="h")
a=0.1
j=1:1000
f=10*j^(a)
plot(j,f, type="h")
a=0.1
j=1:1000
f=10*j^(-a)
plot(j,f, type="h")
a=0.1
j=1:1000
f=j^(-a)
plot(j,f, type="h")
a=0.9
j=1:1000
f=j^(-a)
plot(j,f, type="h")
a=0.5
j=1:1000
f=j^(-a)
plot(j,f, type="h")
a=0.6
j=1:1000
f=j^(-a)
plot(j,f, type="h")
a=0.4
j=1:1000
f=j^(-a)
plot(j,f, type="h")
a=0.4
j=1:100
f=j^(-a)
plot(j,f, type="h")
a=0.4
j=1:500
f=j^(-a)
plot(j,f, type="h")
x<-1:1024
a1<-1.5*sin(pi*x/6) #T1=2pi/(pi/6)=12
a2<-3*sin(pi*x/12)  #T2=2pi/(pi/12)=24
a3<-5*sin(pi*x/24)  #T3=2pi/(pi/24)=48
par(mfrow=c(2,2))
plot.ts(a1, ylim=c(-5,5))
plot.ts(a2, ylim=c(-5,5),col="blue")
plot.ts(a3, ylim=c(-5,5),col="red")
plot.ts(a1, ylim=c(-5,5))
lines(a2, col="blue")
lines(a3, col="red")
suma<-a1+a2+a3
par(mfrow=c(2,1))
plot.ts(suma)
acf(suma)
acf(suma)
acf(suma, lag.max = 500)
acf(suma, lag.max = 250)
acf(suma, lag.max = 100)
acf(suma, lag.max = 100)
pacf(suma, lag.max = 100)
acf2(suma, lag.max = 100)
library(astsa)
acf2(suma, lag.max = 100)
library(astsa)
acf2(suma, lag.max = 100)
acf2(suma)
?acf2(suma)
acf2(suma, max.lag=100)
acf2(suma, max.lag=100, plot=F)
acf2(suma, max.lag=100, plot=FALSE)
acf2(suma, max.lag=100, plot="FALSE")
?acf2(suma, max.lag=100, plot=FALSE)
acf2(suma, max.lag=100)
acf(suma, max.lag=100)
acf(suma,lag.max=100)
acf(suma,lag.max=100 )
acf(suma,lag.max=100, ci=0 )
per<-spec.pgram(suma, log="no") # Grafica da densidade espectral estimada
x<-1:1024
a1<-1.5*sin(pi*x/6) #T1=2pi/(pi/6)=12
a2<-3*sin(pi*x/12)  #T2=2pi/(pi/12)=24
a3<-5*sin(pi*x/24)  #T3=2pi/(pi/24)=48
par(mfrow=c(2,2))
plot.ts(a1, ylim=c(-5,5))
plot.ts(a2, ylim=c(-5,5),col="blue")
plot.ts(a3, ylim=c(-5,5),col="red")
plot.ts(a1, ylim=c(-5,5))
lines(a2, col="blue")
lines(a3, col="red")
suma<-a1+a2+a3
par(mfrow=c(2,1))
plot.ts(suma)
plot.ts(suma)
acf(suma,lag.max=100, ci=0 )
per<-spec.pgram(suma, log="no") # Grafica da densidade espectral estimada
f1<-which.max(per$spec) #Posicion de la frecuencia
wmax1<-per$freq[f1] # Em qual freq atinge o maximo
(T1<-1/wmax1) #Para calcular o periodo principal
f2<-which.max(per$spec[-c(f1)])
wmax2<-per$freq[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
xx1<-per$freq[70:100]
yy1<-per$spec[70:100]
plot(xx1,yy1, type="l")
f3<-which.max(yy1)
wmax3<-xx1[f3] # Em qual freq atinge o maximo
(T3<-1/wmax3) #Para calcular o periodo principal
per<-spec.pgram(suma, log="no") # Grafica da densidade espectral estimada
suma2<-a1+a2+a3+rnorm(1024, sd=5)
plot.ts(suma2)
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(1,2))) # Grafica da densidade espectral estimada
f1<-which.max(per$spec) #Posicion de la frecuencia
wmax1<-per$freq[f1] # Em qual freq atinge o maximo
(T1<-1/wmax1) #Para calcular o periodo principal
zz1<-per$freq[25:100]
ww1<-per$spec[25:100]
plot(zz1,ww1, type="l")
f2<-which.max(ww1)
wmax2<-zz1[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
xx1<-per$freq[70:100]
yy1<-per$spec[70:100]
plot(xx1,yy1, type="l")
f3<-which.max(yy1)
wmax3<-xx1[f3] # Em qual freq atinge o maximo
(T3<-1/wmax3) #Para calcular o periodo principal
par(mfrow=c(2,1))
plot.ts(suma2)
plot.ts(suma2)
acf(suma2,lag.max=100, ci=0 )
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(1,2))) # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(5,4))) # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(2,2))) # Grafica da densidade espectral estimada
install.packages("rmarkdown")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("evaluate")
library("evaluate", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("formatR")
library("formatR", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("htmltools")
install.packages("knitr")
install.packages("jsonlite")
install.packages("base64")
install.packages("rprojroot")
library("htmltools", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("formatR", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("jsonlite", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("base64", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
par(mfrow=c(3,1))
plot.ts(a1+a2+a3)
plot.ts(a1+a3)
B=rep(0,1024)
B[1:512]<-(a1+a2+a3)[1:512]
B[513:1024]<-(a1+a3)[1:512]
plot.ts(B)
suma<-a1+a2+a3
par(mfrow=c(2,1))
plot.ts(suma)
per<-spec.pgram(suma, log="no") # Grafica da densidade espectral estimada
names(per)
per$freq # Freqs donde se calculan as Densidades espectrales
per$spec # Densidades espectrales estimadas
wmax<-per$freq[which.max(per$spec)] # Em qual freq atinge o maximo
(s<-1/wmax) #Para calcular o periodo principal
suma<-a1+a2+a3
par(mfrow=c(2,1))
plot.ts(suma)
per<-spec.pgram(suma, log="no") # Grafica da densidade espectral estimada
names(per)
per$freq # Freqs donde se calculan as Densidades espectrales
per$spec # Densidades espectrales estimadas
wmax<-per$freq[which.max(per$spec)] # Em qual freq atinge o maximo
(s<-1/wmax) #Para calcular o periodo principal
plot.ts(B)
per1<-spec.pgram(B, log="no") # Grafico da densidad espectral estimada
par(mfrow=c(3,1)) # Nao podemos identificar cambio
plot.ts(B)
per<-spec.pgram(suma, log="no")
per1<-spec.pgram(B, log="no")
library(wavethresh)
par(mfrow=c(3,2))
draw(filter.number=4, family="DaubExPhase", enhance=FALSE, main="")
draw(filter.number=6, family="DaubExPhase", enhance=FALSE, main="")
draw(filter.number=4, family="DaubLeAsymm", enhance=FALSE, main="")
draw(filter.number=10, family="DaubLeAsymm", enhance=FALSE, main="")
draw(filter.number=2, family="DaubExPhase", enhance=FALSE, main="")
draw(filter.number=8, family="DaubLeAsymm", enhance=FALSE, main="")
tB<-scale(B)
tB.dwt<-wd(tB, filter.number = 8)
tB<-scale(B)
tB.dwt<-wd(tB, filter.number = 8)
plot(tB.dwt)
names(tB.dwt)
tB.dwt$nlevels # Numero de niveis
length(tB.dwt$D) # Coeficientes Detalhes
tB<-scale(B)
tB.dwt<-wd(tB, filter.number = 8)
plot(tB.dwt)
dir()
setwd("~/Dropbox/UDEA/Series de tiempo II/CLASES/Clase R_2/Ejemplo_2")
dir()
dir()
datos<-read.table("julio.txt", dec = ",", header = FALSE, sep = "")
names(datos)
plot.ts(datos)
length(V1)
length(V1)
datos<-read.table("julio.txt", dec = ",", header = FALSE, sep = "")
names(datos)
plot.ts(datos)
head(datos)
dim(datos)
length(V1)
datos
plot.ts(V1)
acf(V1)
length(which(is.na(V1)==TRUE)) #Numero de dados faltantes
X<-na.omit(V1) #Omitiendo datos faltantes
length(X)
plot.ts(X)
dir()
datos<-read.table("julio.txt", dec = ",", header = FALSE, sep = "")
dim(datos)
length(V1)
plot.ts(datos)
head(datos)
attach(datos)
length(V1)
plot.ts(datos)
acf(V1)
acf(datos)
datos<-read.table("julio.txt", dec = ",", header = TRUE, sep = "")
names(datos)
datos<-as.vector(read.table("julio.txt", dec = ",", header = FALSE, sep = ""))
plot.ts(datos)
acf(datos)
length(which(is.na(datos)==TRUE)) #Numero de dados faltantes
X<-na.omit(V1) #Omitiendo datos faltantes
length(X)
dir()
datos<-(read.table("julio.txt", dec = ",", header = FALSE, sep = "")
names(datos)
plot.ts(datos)
head(datos)
dim(datos)
attach(datos)
length(V1)
#Graficos
plot.ts(datos)
acf(datos)
length(which(is.na(datos)==TRUE)) #Numero de dados faltantes
X<-na.omit(V1) #Omitiendo datos faltantes
length(X)
plot.ts(X)
#ACF PACF sin datos faltantes
acf(X, lag.max = 100)
pacf(X, lag.max = 100)
plot.ts(X[1:100])
plot.ts(V1[1:100])
plot.ts(V1[100:200])
plot.ts(V1[200:300])
plot.ts(V1[300:400])
plot.ts(V1[400:500])
plot.ts(V1[500:600])
V1[1:100]
library(stats)
per1<-spec.pgram(X, log="no",kernel("daniell", c(5,7))) # Grafica la densidad espectral estimada
?spec.pgram # library(stats)
names(per1)
per1$freq # Freqs donde se calculan las Densidades espectrales
per1$spec # Densidades espectrales estimadas
wmax1<-per1$freq[which.max(per1$spec)] # En cual freq alcanza el maximo
(s1<-1/wmax1) #Para calcular el periodo principal
(sort(per1$spec))[c(1:100)]
(sort(per1$spec))[c(11000:11250)]
# NOTA1: De aqu?? podemos decir que el primer periodo relevante es P1=22,91242.
#        Las dem??s frequencias en una vecidad de ella son muy parecidas.
#Tiramos os primeiros 1200 elemento del periodograma para localizar el segundo grupo de frequencias altas.
XXX<-per1$freq
YYY<-per1$spec
length(XXX)
plot(XXX[-c(0:1200)],YYY[-c(0:1200)], type = "l")
x1<-XXX[-c(0:1200)]
y1<-YYY[-c(0:1200)]
max2<-x1[which.max(y1)]
(ss1<-1/max2)
#NOTA2: De aqu?? podemos decir que el segundo periodo relevante es P2=11,46789.
#       Las dem??s frequencias en una vecidad de ella son muy parecidas.
#NOTA3: Se puede observar que (2*ss1 \aprox s1) (2*11.46789 \aprox 22.91242), o sea,
#       el periodo principal es dos veces el periodo secundario.
#PRUEBAS DE HIPOTESIS
#Para Frecuencia Principal
n=length(X)/2
g1<-max(per1$spec)/(sum(per1$spec[1:length(X)/2]))
pv1=n*(1-g1)^n
#Para Frecuencia Secundario
g2<-max(y1)/(sum(per1$spec[1:length(X)/2])-max(per1$spec))
pv2=(n-1)*(1-g2)^(n-2)
datos<-read.table("julio.txt", dec = ",", header = FALSE, sep = "")
names(datos)
plot.ts(datos)
head(datos)
dim(datos)
attach(datos)
length(V1)
plot.ts(V1)
acf(datos)
acf(V1)
length(V1)
plot.ts(V1)
acf(V1)
X<-na.omit(V1) #Omitiendo datos faltantes
length(X)
plot.ts(X)
acf(X, lag.max = 100)
pacf(X, lag.max = 100)
plot.ts(X[1:100])
plot.ts(V1[1:100])
plot.ts(V1[100:200])
plot.ts(V1[200:300])
plot.ts(V1[300:400])
plot.ts(V1[400:500])
plot.ts(V1[500:600])
V1[1:100]
per1<-spec.pgram(X, log="no",kernel("daniell", c(5,7))) # Grafica la densidad espectral estimada
names(per1)
wmax1<-per1$freq[which.max(per1$spec)] # En cual freq alcanza el maximo
(s1<-1/wmax1) #Para calcular el periodo principal
(sort(per1$spec))[c(1:100)]
(sort(per1$spec))[c(11000:11250)]
XXX<-per1$freq
YYY<-per1$spec
length(XXX)
plot(XXX[-c(0:1200)],YYY[-c(0:1200)], type = "l")
x1<-XXX[-c(0:1200)]
y1<-YYY[-c(0:1200)]
max2<-x1[which.max(y1)]
(ss1<-1/max2)
n=length(X)/2
g1<-max(per1$spec)/(sum(per1$spec[1:length(X)/2]))
pv1=n*(1-g1)^n
(pv1=n*(1-g1)^n)
(pv2=(n-1)*(1-g2)^(n-2))
g2<-max(y1)/(sum(per1$spec[1:length(X)/2])-max(per1$spec))
(pv2=(n-1)*(1-g2)^(n-2))
per1<-spec.pgram(X, log="no",kernel("daniell", c(5,7))) # Grafica la densidad espectral estimada
acf(X, lag.max = 100)
acf(X, lag.max = 5000)
?soi
soi
library(astsa) #Para ver la base de datos de Johnson & Johnson
soi
plot(soi, main="SOI", ylab="");grid() # Serie Original
mod<-lm(soi~time(soi))
abline(mod, lwd="2")
summary(mod)
des<-soi-(mod$coefficients[1]+time(soi)*mod$coefficients[2])
plot(des, main="SOI", ylab="");grid() # Serie con tendencia removida
par(mfrow=c(1,3))
plot.ts(des)
acf(des)
pacf(des)
I = abs(fft(des))^2/453 # Periodograma
P = (4/453)*I[1:226] #  Periodograma escalado
f = 0:225/453 # Frecuencias
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
n=226
P1=which.max(P) # Frecuencia Principal
f1=f[P1]
g1<-(max(P))/(sum(P))
pv1<-n*(1-g1)^(n-1) #Periodo significativo
(pv1<-n*(1-g1)^(n-1)) #Periodo significativo
P2=which.max(P[1:15]) #Frecuencia Secundaria
f2=f[P2]
g2<-(max(P[1:15])/(sum(P)-max(P)))
(pv2<-(n-1)*(1-g2)^(n-2)) #Periodo significativo
points(x=f1, y=max(P), pch = 21, bg="white", lwd=3)
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
points(x=f1, y=max(P), pch = 21, bg="white", lwd=3)
points(x=f2, y=max(P[1:15]), pch = 21, bg="black", lwd=3)
(T1=1/f1) # Ciclo anual (MESES)
(T2=1/f2) # Ciclo debido al fenomeno del nino (MESES)
P3=which.max(P[45:100]) #Frecuencia Secundaria
f3=f[P3]
g3<-(max(P[45:100])/(sum(P)-max(P)-max(P[1:15])))
(pv3<-(n-3)*(1-g3)^(n-3)) #Periodo NOO significativo
(pv3<-(n-3)*(1-g3)^(n-3)) #Periodo NOO significativo
P3=which.max(P[45:100]) #Frecuencia Secundaria
f3=f[P3]
g3<-(max(P[45:100])/(sum(P)-max(P)))
(pv3<-(n-3)*(1-g3)^(n-3)) #Periodo NOO significativo
max(P[45:100])
P
sum(P)
g3<- (max(P[45:100])/(sum(P)-max(P[1:15])) )
(pv3<-(n-3)*(1-g3)^(n-3)) #Periodo NOO significativo
g3<- (max(P[45:100])/(sum(P)-max(P[1:15])) )
(pv3<-(n-3)*(1-g3)^(n-3)) #Periodo NOO significativo
per<-spec.pgram(des, log="no", kernel("modified.daniell", c(1,1)) ) #Suavizada
max(P[1:15])
max(P[45:100])
(pv3<-(n-3)*((1-g3)^(n-3))) #Periodo NOO significativo
P1=which.max(P) # Frecuencia Principal
f1=f[P1]
g1<-(max(P))/(sum(P))
(pv1<-n*(1-g1)^(n-1)) #Periodo significativo
P
(pv1<-(n*(1-g1))^(n-1)) #Periodo significativo
pv1<-n*(1-g1)^(n-1) #Periodo significativo
pv1
pv1<-n*((1-g1)^(n-1)) #Periodo significativo
pv1
(pv1<-n*(1-g1)^(n-1)) #Periodo significativo
f2=f[P2]
f2
max(P[1:15])
P2=which.max(P[1:15]) #Frecuencia Secundaria
P2
max(P[1:15])
max(P[1:25])
f1=f[P1]
f1
max(P)
f1=f[P1]
f[P1]
P1=which.max(P) # Frecuencia Principal
P1
f1=f[P1]
f1
f1=f[P1]
f1
per<-spec.pgram(des, log="no", kernel("modified.daniell", c(1,1)) ) #Suavizada
per<-spec.pgram(des, log="no", kernel("modified.daniell", c(5,5)) ) #Suavizada
f = 0:225/453 # Frecuencias
f
P1=which.max(P) # Frecuencia Principal
P1
f1=f[P1]
g1<-(max(P))/(sum(P))
(pv1<-n*(1-g1)^(n-1)) #Periodo significativo
P = (4/453)*I[1:226] #  Periodograma escalado
f = 0:225/453 # Frecuencias
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
n=226
P1=which.max(P) # Frecuencia Principal
f1=f[P1]
(P1=which.max(P)) # Frecuencia Principal
(f1=f[P1])
39/226
39/450
P[1:25]
P2=which.max(P[1:25]) #Frecuencia Secundaria
(P2=which.max(P[1:25])) #Frecuencia Secundaria
(f2=f[P2])
(P2=which.max(P[1:25])) #Frecuencia Secundaria
(f2=f[P2])
(g2<-(max(P[1:15])/(sum(P)-max(P))))
(pv2<-(n-1)*(1-g2)^(n-2)) #Periodo significativo
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
points(x=f1, y=max(P), pch = 21, bg="white", lwd=3)
points(x=f2, y=max(P[1:15]), pch = 21, bg="black", lwd=3)
(T1=1/f1) # Ciclo anual (MESES)
(T2=1/f2) # Ciclo debido al fenomeno del nino (MESES)
points(x=f3, y=max(P[45:100]), pch = 21, bg="black", lwd=3)
f3=f[P3]
P3=which.max(P[45:100]) #Frecuencia Secundaria
(P3=which.max(P[45:100])) #Frecuencia Secundaria
(P3=which.max(P[45:100])) #Frecuencia Secundaria
f3=f[78]
f3
points(x=f3, y=max(P[45:100]), pch = 21, bg="black", lwd=3)
(P3=which.max(P[45:100])) #Frecuencia Secundaria
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
points(x=f1, y=max(P), pch = 21, bg="white", lwd=3)
points(x=f2, y=max(P[1:15]), pch = 21, bg="black", lwd=3)
(P3=which.max(P[45:100])) #Frecuencia Secundaria
f3=f[77]
points(x=f3, y=max(P[45:100]), pch = 21, bg="black", lwd=3)
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
points(x=f1, y=max(P), pch = 21, bg="white", lwd=3)
points(x=f2, y=max(P[1:15]), pch = 21, bg="black", lwd=3)
g3<- (max(P[45:200])/(sum(P)-max(P[1:15])) )
(pv3<-(n-3)*((1-g3)^(n-3))) #Periodo NOO significativo
points(x=f3, y=max(P[45:100]), pch = 21, bg="black", lwd=3)
points(x=f3, y=max(P[45:100]), pch = 21, bg="red", lwd=3)
(P3=which.max(P[45:200])) #Frecuencia Secundaria
f3=f[77]
max(P[45:200]
)
g3<-(max(P[45:200])/(sum(P)-max(P[1:15])) )
g3
(pv3<-(n-2)*(1-g3)^(n-3)) #Periodo NOO significativo
g3
1-g3
(1-g3)^(n-3)
n-2
g3
(pv3<-(n-2)*(1-g3)^(n-3)) #Periodo NOO significativo
1-g3
(1-g3)^(n-3)
0.9^500
0.9^200
n-3
1-g3
0.98^223
?combn()
g3
(1-g3)
