boxplot(A,B,C)
A<-rnorm(100, 3, 9)
B<-rnorm(100, 14, 2)
C<-rchisq(100, 8)
boxplot(A,B,C)
A<-rnorm(100, 3, 9)
B<-rnorm(100, 14, 2)
C<-rchisq(100, 8)
boxplot(A,B,C)
A<-rnorm(100, 3, 9)
B<-rnorm(100, 14, 2)
C<-rchisq(100, 8)
boxplot(A,B,C)
boxplot(A[-max(A)],B,C)
boxplot(A[-c(max(A),min(A))],B,C)
boxplot(A[-c(max(A),min(A))],B,C)
boxplot(A[-(c(max(A),min(A)))],B,C)
boxplot(A,B,C)
A<-rnorm(100, 3, 9)
B<-rnorm(100, 14, 2)
C<-rchisq(100, 8)
boxplot(A,B,C)
A<-rnorm(100, 3, 9)
B<-rnorm(100, 14, 2)
C<-rchisq(100, 8)
boxplot(A,B,C)
A<-rnorm(100, 3, 9)
B<-rnorm(100, 14, 2)
C<-rchisq(100, 8)
boxplot(A,B,C)
A<-rnorm(100, 3, 7)
B<-rnorm(100, 14, 2)
C<-rchisq(100, 8)
boxplot(A,B,C)
boxplot(abs(A),B,C)
boxplot(A+5,B+5,C+5)
boxplot(A,B,C)+5
boxplot(A+10,B,C)
boxplot(A+20,B,C)
boxplot(A+20,B+20,C+20)
boxplot(A+20,B+20,C+20);grid()
boxplot(T1,T2,T3);grid()
T1<-A+20
T2<-B+20
T3<-C+20
boxplot(T1,T2,T3);grid()
?boxplot(A+20,B+20,C+20,);grid()
?boxplot
boxplot(count ~ spray, data = InsectSprays, col = "lightgray")
boxplot(count ~ spray, data = InsectSprays, col = "lightgray");grid()
boxplot(count ~ spray, data = InsectSprays,
notch = TRUE, add = TRUE, col = "blue")
boxplot(decrease ~ treatment, data = OrchardSprays,
log = "y", col = "bisque")
rb <- boxplot(decrease ~ treatment, data = OrchardSprays, col = "bisque")
title("Comparing boxplot()s and non-robust mean +/- SD")
mn.t <- tapply(OrchardSprays$decrease, OrchardSprays$treatment, mean)
sd.t <- tapply(OrchardSprays$decrease, OrchardSprays$treatment, sd)
xi <- 0.3 + seq(rb$n)
points(xi, mn.t, col = "orange", pch = 18)
arrows(xi, mn.t - sd.t, xi, mn.t + sd.t,
code = 3, col = "pink", angle = 75, length = .1)
mat <- cbind(Uni05 = (1:100)/21, Norm = rnorm(100),
`5T` = rt(100, df = 5), Gam2 = rgamma(100, shape = 2))
boxplot(as.data.frame(mat),
main = "boxplot(as.data.frame(mat), main = ...)")
boxplot(as.data.frame(mat), main = "boxplot(*, horizontal = TRUE)",
horizontal = TRUE)
boxplot(len ~ dose, data = ToothGrowth,
boxwex = 0.25, at = 1:3 - 0.2,
subset = supp == "VC", col = "yellow",
main = "Guinea Pigs' Tooth Growth",
xlab = "Vitamin C dose mg",
ylab = "tooth length",
xlim = c(0.5, 3.5), ylim = c(0, 35), yaxs = "i")
boxplot(len ~ dose, data = ToothGrowth, add = TRUE,
boxwex = 0.25, at = 1:3 + 0.2,
subset = supp == "OJ", col = "orange")
legend(2, 9, c("Ascorbic acid", "Orange juice"),
fill = c("yellow", "orange"))
boxplot(len ~ dose, data = ToothGrowth,
boxwex = 0.25, at = 1:3 - 0.2,
subset = supp == "VC", col = "yellow",
main = "Guinea Pigs' Tooth Growth",
xlab = "Vitamin C dose mg",
ylab = "tooth length",
xlim = c(0.5, 3.5), ylim = c(0, 35), yaxs = "i")
mat <- cbind(Uni05 = (1:100)/21, Norm = rnorm(100),
`5T` = rt(100, df = 5), Gam2 = rgamma(100, shape = 2))
boxplot(as.data.frame(mat),
main = "boxplot(as.data.frame(mat), main = ...)")
mat <- cbind(`T1` = (1:100)/21, `T2` = rnorm(100),
`T3` = rt(100, df = 5), `T4` = rgamma(100, shape = 2))
boxplot(as.data.frame(mat),
main = "boxplot(as.data.frame(mat), main = ...)")
mat <- cbind(`T1` = (1:100)/21, `T2` = rnorm(100),
`T3` = rt(100, df = 5), `T4` = rgamma(100, shape = 2))
boxplot(as.data.frame(mat),
main = "boxplot(as.data.frame(mat), main = ...)")
mat <- cbind(`T1` = (1:100)/21, `T2` = rnorm(100),
`T3` = rt(100, df = 5), `T4` = rgamma(100, shape = 2))
boxplot(as.data.frame(mat),
main = "boxplot(as.data.frame(mat), main = ...)")
mat <- cbind(`T1` = (1:100)/21, `T2` = rnorm(100),
`T3` = rt(100, df = 5), `T4` = rchisq(100, 2))
boxplot(as.data.frame(mat),
main = "boxplot(as.data.frame(mat), main = ...)")
boxplot(as.data.frame(mat));grid()
mat <- cbind(`T1` = (A+20), `T2` = (B+20), `T3` = (C+20))
boxplot(as.data.frame(mat));grid()
mat <- cbind(`T1` = (A+20), `T2` = (B+20), `T3` = (C+20))
boxplot(as.data.frame(mat));grid()
boxplot(as.data.frame(mat), ylab="Tiempo de secado (segundos)");grid()
boxplot(as.data.frame(mat), ylab="Tiempo de secado (segundos)", xlab="Técnica");grid()
boxplot(as.data.frame(mat), ylab="Tiempo de secado (segundos)", xlab="Tecnica");grid()
library("fArma", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
?farimaSim
farimaSim(200)
plot.ts(farimaSim(200)
plot.ts(farimaSim(200))
plot.ts(farimaSim(200))
acf(farimaSim(200))
plot.ts(farimaSim(100))
acf(farimaSim(100))
plot.ts(farimaSim(1000))
acf(farimaSim(1000))
acf(farimaSim(1000), lag.max = 333)
spec.pgram(farimaSim(1000))
spec.pgram(farimaSim(1000), log=F)
spec.pgram(farimaSim(1000), log=T)
spec.pgram(farimaSim(1000), log="T")
?spec.pgram
?farimaSim
X1<-farimaSim(n = 1000, model = list(ar = c(0.5, -0.5), d = 0.3, ma = 0.1),method = c("freq", "time"), ...)
X1<-farimaSim(n = 1000, model = list(ar = c(0.5, -0.5), d = 0.3, ma = 0.1),method = c("freq", "time"))
plot.ts(X1)
acf(X1)
acf(X1, lag.max = 300)
X1<-farimaSim(n = 1000, model = list(ar = c(0.5, -0.5), d = 0.5, ma = 0.1),method = c("freq", "time"))
plot.ts(X1)
acf(X1, lag.max = 300)
X1<-farimaSim(n = 1000, model = list(ar = c(0.5, -0.5), d = 0.5, ma = 0.1),method = c("freq", "time"))
plot.ts(X1)
acf(X1, lag.max = 300)
X1<-farimaSim(n = 1000, model = list(ar = c(0.5, -0.5), d = 0.4, ma = 0.1),method = c("freq", "time"))
plot.ts(X1)
acf(X1, lag.max = 300)
spec.pgram(X1)
?spec.pgram(X1)
spec.ar(X1)
spec.ar(log(X1))
spec.ar(log(X1+max(X1)))
spec.ar(log(X1+max(X1)+1))
spectrum(X1)
spec.pgram(X1,log="no")
X1<-farimaSim(n = 2000, model = list(ar = c(0.5, -0.5), d = 0.4, ma = 0.1),method = c("freq", "time"))
plot.ts(X1)
acf(X1, lag.max = 500)
spec.pgram(X1,log="no")
farimaTrueacf(2000,H=0.9)
plot(farimaTrueacf(2000,H=0.9), type="h")
acft<-farimaTrueacf(2000,H=0.9) # H = d + 1/2
plot(acft, type="h")
acft1<-farimaTrueacf(2000,H=0.4) # H = d + 0.5
plot(acft1, type="h")
acft1<-farimaTrueacf(200,H=0.4) # H = d + 0.5
plot(acft1, type="h")
rsFit(X1)
perFit(X1)
whittleFit(X1)
?fracdiff.sim()
?fracdiff.sim()
library(fracdiff)
?fracdiff.sim()
Z1<-fracdiff.sim(100, ar = .2, ma = .4, d = .3)
Z2<-fracdiff.sim(100, ar = c(0.7, -0.1), ma =c(-0.5, 0.4), d = .3)
acf(Z1)
Z1<-fracdiff.sim(100, ar = .2, ma = .4, d = .3)
Z1
acf(Z1$series)
Z1<-fracdiff.sim(1000, ar = .2, ma = .4, d = .3)
Z2<-fracdiff.sim(1000, ar = c(0.7, -0.1), ma =c(-0.5, 0.4), d = .3)
acf(Z1$series)
Z1<-fracdiff.sim(3000, ar = .2, ma = .4, d = .3)
Z2<-fracdiff.sim(3000, ar = c(0.7, -0.1), ma =c(-0.5, 0.4), d = .3)
acf(Z1$series)
acf(Z1$series, lag.max = 700)
acf(Z2$series, lag.max = 700)
acf(Z1$series, lag.max = 700)
acf(Z2$series, lag.max = 700)
Z1<-fracdiff.sim(3000, ar = .2, ma = .4, d = .3)
par(mfrow(c(1,2)))
Z1<-fracdiff.sim(3000, ar = .2, ma = .4, d = .3)
par(mfrow=c(1,2))
acf(Z1$series, lag.max = 700)
spec.pgram(X1,log="no")
Z2<-fracdiff.sim(3000, ar = c(0.7, -0.1), ma =c(-0.5, 0.4), d = .3)
par(mfrow=c(1,2))
acf(Z2$series, lag.max = 700)
spec.pgram(X1,log="no")
Z2<-fracdiff.sim(3000, ar = c(0.7, -0.1), ma =c(-0.5, 0.4), d = .25)
par(mfrow=c(1,2))
acf(Z2$series, lag.max = 700)
spec.pgram(X1,log="no")
?fracdiff()
fracdiff(Z1, nar = 0, nma = 0,
ar = rep(NA, max(nar, 1)), ma = rep(NA, max(nma, 1)),
drange = c(0, 0.5), h, M = 100, trace = 0)
fracdiff(Z1, nar = 1, nma = 1,
ar = rep(NA, max(nar, 1)), ma = rep(NA, max(nma, 1)),
drange = c(0, 0.5), h, M = 100, trace = 0)
fracdiff(Z1, nar = 1, nma = 1, drange = c(0, 0.5))
fracdiff(Z1, drange = c(0, 0.5))
fracdiff(Z1, nar = 2, nma = 2,ndrange = c(0, 0.5), h, M = 100, trace = 0)
fracdiff(Z1, nar = 2, nma = 2, ndrange = c(0, 0.5), trace = 0)
fracdiff(Z1, nar = 2, nma = 2, ndrange = c(0, 0.5))
Z1<-fracdiff.sim(3000, ar = .2, ma = .4, d = .3)
fracdiff(Z1, nar = 2, nma = 2, ndrange = c(0, 0.5))
fracdiff(Z1, nar = 8, nma = 8, ndrange = c(0, 0.5))
fracdiff(Z1$series, nar = 8, nma = 8, ndrange = c(0, 0.5))
fracdiff(Z1$series, nar = 1, nma = 1, ndrange = c(0, 0.5))
fracdiff(Z1$series, nar = 1, nma = 1)
df<-fracdiff(Z1$series, nar = 1, nma = 1)
diffseries(Z1$series,df$d)
acf(diffseries(Z1$series,df$d))
pacf(diffseries(Z1$series,df$d))
fdGPH(Z1)
?fdGPH(Z1)
fdGPH(Z1,bandw.exp = 0.5)
fdGPH(Z1$series,bandw.exp = 0.5)
u = acf(log(varve), 100, plot=FALSE)
library(astsa)
u = acf(log(varve), 100, plot=FALSE)
plot(u[1:100], ylim=c(-.1,1), main="log(varve)") # get rid of lag 0
plot.ts(varve)
plot.ts(log(varve))
u = acf(log(varve), 100, plot=FALSE)
plot(u[1:100], ylim=c(-.1,1), main="log(varve)") # get rid of lag 0
library(fracdiff)
lvarve = log(varve)-mean(log(varve))
lvarve = log(varve)-mean(log(varve));plot.ts(lvarve)
lvarve = log(varve)-mean(log(varve));plot.ts(log(varve)-mean(log(varve)))
varve.fd = fracdiff(lvarve, nar=0, nma=0, M=30)
varve.fd$d # = 0.3841688
spec.pgram(lvarve, log="no")
spec.pgram(lvarve, log="no", ylab=c(0,30))
spec.pgram(lvarve, log="no", ylim=c(0,30))
spec.pgram(lvarve, log="no", ylim=c(0,25))
varve.fd$stderror.dpq # = 4.589514e-06 (questionable result!!)
names(varve.fd)
p = rep(1,31)
for (k in 1:30){ p[k+1] = (k-varve.fd$d)*p[k]/(k+1) }
plot(1:30, p[-1], ylab=expression(pi(d)), xlab="Index", type="h") 9 res.fd = diffseries(log(varve), varve.fd$d) # frac diff resids
plot(1:30, p[-1], ylab=expression(pi(d)), xlab="Index", type="h")
res.fd = diffseries(log(varve), varve.fd$d) # frac diff resids
res.arima = resid(arima(log(varve), order=c(1,1,1))) # arima resids 11 par(mfrow=c(2,1))
acf(res.arima, 100, xlim=c(4,97), ylim=c(-.2,.2), main="")
acf(res.fd, 100, xlim=c(4,97), ylim=c(-.2,.2), main="")
acf(res.arima, 100, xlim=c(4,97), ylim=c(-.2,.2), main="")
acf(res.fd, 100, xlim=c(4,97), ylim=c(-.2,.2), main="")
par(mfrow=c(2,1))
acf(res.arima, 100, xlim=c(4,97), ylim=c(-.2,.2), main="")
acf(res.fd, 100, xlim=c(4,97), ylim=c(-.2,.2), main="")
setwd("~/Dropbox/UDEA/Series de tiempo II/CLASES/Clase R_4.1")
dir()
IBV=read.csv(file="G:/AULA/ibv.csv",header=T, sep=";")
IBV=read.csv(file="G:/AULA/ibv.csv",header=T, sep=";")
IBV=read.csv(file="ibv.csv",header=T, sep=";")
View(IBV)
attach(IBV)
head(IBV)
Close
Close.ts=ts(Close,start =2003,frequency=279)
IBV.ts=ts(IBV)
lnret
par(mfrow=c(1,2))
plot(Close.ts, ylab="Fechamento", xlab="")
title("SÈrie Original do Fechamento")
plot.ts(lnret, ylab="Log-Retornos", xlab="",axes=F)
plot(Close.ts, ylab="Fechamento", xlab="")
plot(Close.ts, ylab="Fechamento", xlab="")
plot(Close.ts, ylab="Fechamento", xlab="")
title("SÈrie Original do Fechamento")
plot(Close.ts, ylab="Cierre", xlab="")
title("Serie Original de Cierre")
plot.ts(lnret, ylab="Log-Retornos", xlab="",axes=F)
plot.ts(lnret, ylab="Log-Retornos", xlab="",axes=T)
par(new=TRUE)
plot(Close.ts,ylim=c(-0.3,0.3), ylab="", xlab="",col=NULL)
lnret[1]=0
lnret
lr=lnret[2:2295]*100
acf(lnret,ylab="FAC", xlab="lag")
par(mfrow=c(1,2))
qqnorm(lnret,xlab="Quantis TeÛricos",ylab="Quantis Amostrais",main="Q-Q plot dos log-retornos")
qqnorm(lnret,xlab="Quantis TeÛricos",ylab="Quantis Amostrais",main="Q-Q plot dos log-retornos")
hist(lnret,freq=F, col="green",breaks=20, ylim=c(0,25),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
acf(lnret,ylab="FAC", xlab="lag")
par(mfrow=c(1,2))
qqnorm(lnret,xlab="Quantis TeÛricos",ylab="Quantis Amostrais",main="Q-Q plot dos log-retornos")
lnret
lr=lnret[2:2295]*100
lr
View(IBV)
attach(IBV)
IBV.ts=ts(IBV)
IBV=read.csv(file="ibv.csv",header=T, sep=";")
View(IBV)
rt<-diff(log(Close))
plot.ts(rt, ylab="Log-Retornos", xlab="",axes=T)
plot(Close.ts, ylab="Cierre", xlab="", main="Serie Original de Cierre")
plot(Close, ylab="Cierre", xlab="", main="Serie Original de Cierre")
plot(ts.Close, ylab="Cierre", xlab="", main="Serie Original de Cierre")
plot(Close.ts, ylab="Cierre", xlab="", main="Serie Original de Cierre")
plot(Close.ts, ylab="Cierre", xlab="", main="Serie Original de Cierre")
plot.ts(rt, ylab="Log-Retornos", xlab="",axes=T)
acf(rt,ylab="FAC", xlab="lag")
qqnorm(rt,xlab="Quantis TeÛricos",ylab="Quantis Amostrais",main="Q-Q plot dos log-retornos")
qqline(rt)
hist(rt,freq=F, col="green",breaks=20, ylim=c(0,25),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
plot(function(x) dnorm(x,mean(rt,na.rm=T),sd(rt,na.rm=T)),min(rt,na.rm=T),max(rt,na.rm=T),add=T)
plot(function(x) dnorm(x,mean(rt,na.rm=T),sd(rt,na.rm=T)),min(rt,na.rm=T),max(rt,na.rm=T),add=T)
hist(rt,freq=F, col="green",breaks=20, ylim=c(0,25),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
plot(function(x) dnorm(x,mean(rt,na.rm=T),sd(rt,na.rm=T)),min(rt,na.rm=T),max(rt,na.rm=T),add=T)
acf(rt^2)
pacf(rt^2)
par(mfrow=c(1,2))
qqnorm(rt,xlab="Quantis TeÛricos",ylab="Quantis Amostrais",main="Q-Q plot dos log-retornos")
qqline(rt)
qqline(rt, col="red")
qqline(rt, col="red")
hist(rt,freq=F, col="green",breaks=20, ylim=c(0,25),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
acf(rt,ylab="FAC", xlab="lag")
par(mfrow=c(1,2))
qqnorm(rt,xlab="Quantis TeÛricos",ylab="Quantis Amostrais",main="Q-Q plot dos log-retornos")
qqline(rt, col="red")
qqnorm(rt,xlab="Quantis TeÛricos",ylab="Quantis Amostrais",main="Q-Q plot dos log-retornos")
qqline(rt, col="red")
hist(rt,freq=F, col="green",breaks=20, ylim=c(0,25),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
plot(function(x) dnorm(x,mean(rt,na.rm=T),sd(rt,na.rm=T)),min(rt,na.rm=T),max(rt,na.rm=T),add=T)
legend("topright",c("Normal"),lty=1,cex=0.75)
summary(rt)
library(e1071)
kurtosis(rt)
?library(e1071)
skewness(rt)
hist(rt,freq=F, col="green",breaks=20, ylim=c(0,25),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
plot(function(x) dnorm(x,mean(rt,na.rm=T),sd(rt,na.rm=T)),min(rt,na.rm=T),max(rt,na.rm=T),add=T)
hist(rt,freq=F, col="green",breaks=20, ylim=c(0,30),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
plot(function(x) dnorm(x,mean(rt,na.rm=T),sd(rt,na.rm=T)),min(rt,na.rm=T),max(rt,na.rm=T),add=T)
rt<-diff(log(Oen))
rt<-diff(log(pen))
rt<-diff(log(Open))
plot.ts(rt, ylab="Log-Retornos", xlab="",axes=T)
acf(rt,ylab="FAC", xlab="lag")
par(mfrow=c(1,2))
qqnorm(rt,xlab="Quantis TeÛricos",ylab="Quantis Amostrais",main="Q-Q plot dos log-retornos")
qqline(rt, col="red")
hist(rt,freq=F, col="green",breaks=20, ylim=c(0,30),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
plot(function(x) dnorm(x,mean(rt,na.rm=T),sd(rt,na.rm=T)),min(rt,na.rm=T),max(rt,na.rm=T),add=T)
legend("topright",c("Normal"),lty=1,cex=0.75)
summary(rt)
mean(rt)
library(e1071)
kurtosis(rt)
skewness(rt)
rt<-diff(log(Low))
par(mfrow=c(1,2))
plot.ts(rt, ylab="Log-Retornos", xlab="",axes=T)
acf(rt,ylab="FAC", xlab="lag")
par(mfrow=c(1,2))
qqnorm(rt,xlab="Quantis TeÛricos",ylab="Quantis Amostrais",main="Q-Q plot dos log-retornos")
qqline(rt, col="red")
hist(rt,freq=F, col="green",breaks=20, ylim=c(0,30),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
plot(function(x) dnorm(x,mean(rt,na.rm=T),sd(rt,na.rm=T)),min(rt,na.rm=T),max(rt,na.rm=T),add=T)
legend("topright",c("Normal"),lty=1,cex=0.75)
summary(rt)
mean(rt)
library(e1071)
kurtosis(rt)
skewness(rt)
acf(rt^2)
pacf(rt^2)
hist(Close)
library(fracdiff)
w<-fracdiff.sim(600, ma=0.7 , d=0.3)
plot(as.ts(w$series))
acf(z, lag.max=150)
w<-fracdiff.sim(600, ma=0.7 , d=0.3)
plot(as.ts(w$series))
acf(w, lag.max=150)
w<-fracdiff.sim(600, ma=0.7 , d=0.3)
plot(as.ts(w$series))
acf(w, lag.max=150)
w=w$series
acf(w, lag.max=150)
w<-fracdiff.sim(600, ma=0.7 , d=0.3)
w<-fracdiff.sim(600, ma=0.7 , d=0.3)
plot(as.ts(w$series))
acf(w$series, lag.max=150)
df_w<-diffseries(w$series, 0.35)
par(mfrow = c(3, 1))
plot(df_w, type="l")
acf(df_w)
pacf(df_w, ci=0)
modelo1<-fracdiff(w$series, nma = 1, dtol = NULL, drange = c(0, 0.5), M = 100)
summary(modelo1)
plot.ts(h11)
IBV=read.csv(file="ibv.csv",header=T, sep=";")
View(IBV)
attach(IBV)
IBV.ts=ts(IBV)
head(IBV)
par(mfrow=c(1,2))
plot(Close.ts, ylab="Cierre", xlab="", main="Serie Original de Cierre")
plot.ts(rt, ylab="Log-Retornos", xlab="",axes=T)
rt<-diff(log(Close.ts))
plot(Close.ts, ylab="Cierre", xlab="", main="Serie Original de Cierre")
plot.ts(rt, ylab="Log-Retornos", xlab="",axes=T)
acf(rt,ylab="FAC", xlab="lag")
pacf(rt,ylab="FAC", xlab="lag")
par(mfrow=c(1,2))
par(mfrow=c(1,2))
par(mfrow=c(2,2))
qqnorm(rt,xlab="Quantis Te??ricos",ylab="Quantis Amostrais",main="Q-Q plot dos log-retornos")
qqline(rt, col="red")
hist(rt,freq=F, col="green",breaks=20, ylim=c(0,30),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
plot(function(x) dnorm(x,mean(rt,na.rm=T),sd(rt,na.rm=T)),min(rt,na.rm=T),max(rt,na.rm=T),add=T)
hist(rt,freq=F, col="green",breaks=20, ylim=c(0,30),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
plot(function(x) dnorm(x,mean(rt,na.rm=T),sd(rt,na.rm=T)),min(rt,na.rm=T),max(rt,na.rm=T),add=T)
legend("topright",c("Normal"),lty=1,cex=0.75)
acf(rt^2)
pacf(rt^2)
hist(rt^2,freq=F, col="green",breaks=20, ylim=c(0,30),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
hist(rt^2,freq=F, col="green",breaks=20, ylim=c(0,50),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
hist(rt^2,freq=F, col="green",breaks=20, ylim=c(0,70),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
hist(rt^2,freq=F, col="green",breaks=20, ylim=c(0,100),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
hist(rt^2,freq=F, col="green",breaks=20, ylim=c(0,200),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
hist(rt^2,freq=F, col="green",breaks=20, ylim=c(0,1000),main="Histograma dos log-retornos", ylab="Densidade", xlab="log-retornos")
acf(rt^2)
par(mfrow=c(1,2))
acf(rt^2)
pacf(rt^2)
acf(rt^2, main="ACF Cuadrado de Retornos")
pacf(rt^2, main="PACF Cuadrado de Retornos")
library('MASS')
library('xts')
library('tseries')
library('quantmod')
library('timeDate')
getSymbols(c('PBR' ,'PZE'))
head(PBR)
getSymbols(c('PBR' ,'PZE'))
library('MASS')
library('xts')
library('tseries')
library('quantmod')
library('timeDate')
setSymbolLookup(QQQ='yahoo',SPY='google')
getSymbols(c('PBR' ,'PZE'))
QQQ
setSymbolLookup(QQQ='yahoo',SPY='google')
SPY
head(PBR)
head(PZE)
pre_pb<-ts(PBR$PBR.Adjusted)
PBR$PBR
getSymbols(c('PBR' ,'PZE'))
setSymbolLookup(SPY='google')
getSymbols(c('PBR' ,'PZE'))
?getSymbols(c('PBR' ,'PZE'))
YY<-getSymbols(c('PBR' ,'PZE'))
names(YY)
ZZ<-setSymbolLookup(QQQ='yahoo',SPY='google')
names(ZZ)
YY$getSymbols.sources
ZZ<-setSymbolLookup(QQQ="yahoo",SPY="google")
ZZ
names(ZZ)
getSymbols(c("PBR" ,"PZE"))
setSymbolLookup(QQQ="yahoo",SPY="google")
setSymbolLookup(QQQ="yahoo",SPY="google")
getSymbols(c("PBR" ,"PZE"))
s1<-ts(st_open)
s1<-ts(Open)
View(IBV)
IBV=read.csv(file="ibv.csv",header=T, sep=";")
View(IBV)
plot.ts(s1, main="Serie Open"); grid()
summary(s1)
(s1_BC=powerTransform(s1))
library(car)
(s1_BC=powerTransform(s1))
Trans<-boxcox(s1 ~ 1, lambda = seq(-2, 2, 1/10), plotit = TRUE, xlab = expression(lambda),ylab = "log-Likelihood")
lrS1<-diff(log(S1))
S1<-s1
lrS1<-diff(log(S1))
plot.ts(lrS1)
plot.ts(S1)
par(mfrow=c(2,2))
plot.ts(S1)
plot.ts(lrS1)
qqnorm(lrS1);qqline(lrS1, col = 2)
densidad=density(lrS1) #Para esto me sirvi?? el attach para llamar Price#
truehist(lrS1)
lines(densidad,col="red",lwd=2) #Sobrepone la densidad, le coloca esa aproximaci??n roja#
summary(lrS1)
var(lrS1)
sd(lrS1)
(cv=sd(lrS1)/abs(mean(lrS1)))
skewness(lrS1)
kurtosis(lrS1)
