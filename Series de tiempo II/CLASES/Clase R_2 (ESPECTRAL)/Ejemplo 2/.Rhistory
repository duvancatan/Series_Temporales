trend = time(jj) #- 1970 # helps to ???center??? time
Q1<-rep(c(1,0,0,0),21)
Q2<-rep(c(0,1,0,0),21)
Q3<-rep(c(0,0,1,0),21)
Q4<-rep(c(0,0,0,1),21)
Q<-matrix(c(Q1,Q2,Q3,Q4), ncol=4, byrow=F)
regsin = lm(log(jj) ~ 0 + trend + Q) #  Sin intercepto
regcon = lm(log(jj) ~ trend + Q) #  Con intercepto
model.matrix(regsin) # view the model matrix
model.matrix(regcon)
summary(regsin)
summary(regcon)
esin<-residuals(regsin) # Residuales sin intercepto
econ<-residuals(regcon) # Residuales con intercepto
par(mfrow=c(2,2))
plot.ts(log(jj), lwd=3, main="Estimacion sin Intercepto", ylab="")
lines(log(jj)-esin, lwd=1); grid()
legend("topleft", c("xt real ", "xt estimado"), lwd = c(3, 1) )
plot.ts(log(jj), lwd=3, main="Estimacion con Intercepto", ylab="")
lines(log(jj)-econ, lwd=1); grid()
legend("topleft", c("xt real ", "xt estimado"), lwd = c(3, 1) )
library(MASS)
truehist(esin, main="Histograma - Residuales sin Intercepto", xlab="");lines(density(esin))
truehist(econ, main="Histograma - Residuales con Intercepto", xlab="");lines(density(econ))
shapiro.test(esin)
shapiro.test(econ)
qqnorm(esin)
hist(esin)
shapiro.test(esin)
plot(density(esin))
acf(e)
acf(esin)
library(astsa)
data(varve)
par(mfrow=c(2,2))
plot(varve, main="varve", ylab="");grid()
plot(log(varve), main="log(varve)", ylab="" )
length(varve)
v1<-varve[1:317]
v2<-varve[318:634]
yt<-ts(log(varve))
plot(yt, ylab="", main="log(varve)"); grid()
library(MASS)
par(mfrow=c(1,2))
truehist(varve, main="Histograma varve")
lines(density(varve))
truehist(log(varve), main="Histograma log(varve)")
lines(density(log(varve)))
par(mfrow=c(2,1))
plot(gtemp, type="o", ylab="Global Temperature Deviations");grid()
yt<-ts(log(varve))
plot(yt); grid()
y1<-ts(yt[1:100])
y2<-ts(yt[101:200])
y3<-ts(yt[201:300])
y4<-ts(yt[301:400])
y5<-ts(yt[401:500])
y6<-ts(yt[501:634])
plot(y1,type="o")
plot(y2,type="o")
plot(y3,type="o")
plot(y4,type="o")
plot(y5,type="o")
plot(y6,type="o")
par(mfrow=c(1,2))
plot(gtemp, type="o", main="Global Temperature Deviations",ylab="");grid()
plot(ts(yt[257:357]),type="o", main="log(varve)",ylab="");grid()
par(mfrow=c(1,2))
acf(yt, lag.max=50)
plot(yt)
d<-ts(sin(-50:50)+rnorm(101))
plot(d)
acf(d)
par(mfrow=c(1,2))
ut<-diff(yt)
plot(ut, main="Primera diferencia de yt = log(varve)");grid()
ACF<-acf(ut, main="ACF de la primera diferencia de yt = log(varve)")
pacf(ut)
ACF$acf[2]
p=-0.3974306
teta1<-(-1+sqrt(1-4*p^2))/(2*p)
teta2<-(-1-sqrt(1-4*p^2))/(2*p)
teta1
teta2
vut<-acf(ut, type = c("covariance"))$acf[1]
s1<-vut/(1+teta1^2)
s2<-vut/(1+teta2^2)
s1
s2
soi
?soi
plot(soi, main="SOI", ylab="");grid() # Serie Original
data(jj)
plot.ts(jj)
mod<-lm(soi~time(soi))
abline(mod, lwd="2")
plot(soi, main="SOI", ylab="");grid() # Serie Original
mod<-lm(soi~time(soi))
abline(mod, lwd="2")
summary(mod)
des<-soi-(mod$coefficients[1]+time(soi)*mod$coefficients[2])
plot(des, main="SOI", ylab="");grid() # Serie con tendencia removida
par(mfrow=c(1,2))
length(des)
I = abs(fft(des))^2/453 # the periodogram
P = (4/453)*I[1:226] # the scaled periodogram
f = 0:225/453 # frequencies
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
spec.pgram(des)
per<-spec.pgram(des, log="no")
per
per<-spec.pgram(des, log="no")
par(mfrow=c(1,3))
plot.ts(des)
acf(des)
pacf(des)
pico1<-max(P)
pico1
I = abs(fft(des))^2/453 # Periodograma
P = (4/453)*I[1:226] #  Periodograma escalado
f = 0:225/453 # Frecuencias
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
acf(des)
pacf(des)
acf(des)
I = abs(fft(des))^2/453 # Periodograma
P = (4/453)*I[1:226] #  Periodograma escalado
f = 0:225/453 # Frecuencias
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
points(x=0.08342131, y=0.08242131, pch = 21, bg="white", lwd=3)
points(x=0.024, y=0.01160111, pch = 21, bg="black", lwd=3)
pico1<-max(P)
pico2<-sort(P)[length(P)-1]
1/pico1
(1/pico2)/12
P
I
plot(f, I, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
length(I)
length(f)
plot(f, I[1:226], type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
sort(c(2,4,3,5))
?spectrum()
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
which.max(P)
f[39]
points(x=f[which.max(P)], y=max(P), pch = 21, bg="white", lwd=3)
which.max(P[-c(max(P))])
which.max(P)
which.max(P[1:113])
P = (4/453)*I[1:226] #  Periodograma escalado
which.max(P)
which.max(P[1:15])
f[which.max(P[1:15])]
points(x=f[which.max(P)], y=max(P), pch = 21, bg="white", lwd=3)
points(x=f[which.max(P[1:15])], y=max(P[1:15]), pch = 21, bg="black", lwd=3)
points(x=f1, y=P1, pch = 21, bg="white", lwd=3)
P1=which.max(P)
f1=f[which.max(P)]
P2=which.max(P[1:15])
f2=f[which.max(P[1:15])]
points(x=f1, y=P1, pch = 21, bg="white", lwd=3)
points(x=f2, y=P2, pch = 21, bg="black", lwd=3)
points(x=f1, y=P1, pch = 21, bg="white", lwd=3)
P1=which.max(P)
f1=f[which.max(P)]
P2=which.max(P[1:15])
f2=f[which.max(P[1:15])]
points(x=f1, y=P1, pch = 21, bg="white", lwd=3)
P1
f1=f[which.max(P)]
f1
P1
which.max(P)
points(x=f1, y=P1, pch = 21, bg="white", lwd=3)
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
plot(f, I[1:226], type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
points(x=f1, y=P1, pch = 21, bg="white", lwd=3)
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
plot(f, I[1:226], type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
P1=which.max(P)
f1=f[which.max(P)]
P2=which.max(P[1:15])
f2=f[which.max(P[1:15])]
points(x=f1, y=P1, pch = 21, bg="white", lwd=3)
points(x=f2, y=P2, pch = 21, bg="black", lwd=3)
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
P1=which.max(P)
f1=f[which.max(P)]
P2=which.max(P[1:15])
f2=f[which.max(P[1:15])]
points(x=f1, y=P1, pch = 21, bg="white", lwd=3)
points(x=f2, y=P2, pch = 21, bg="black", lwd=3)
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
P1=which.max(P)
P1
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
P1=which.max(P)
f1=f[P1]
P2=which.max(P[1:15])
f2=f[P2]
points(x=f1, y=max(P1), pch = 21, bg="white", lwd=3)
points(x=f2, y=max(P2), pch = 21, bg="black", lwd=3)
f2
max(P1)
which.max(P)
max(P)
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
P1=which.max(P)
f1=f[P1]
P2=which.max(P[1:15])
f2=f[P2]
points(x=f1, y=max(P), pch = 21, bg="white", lwd=3)
points(x=f2, y=max(P[1:15]), pch = 21, bg="black", lwd=3)
per<-spec.pgram(des, log="no")
per<-spec.pgram(des, log="no", kernel = "Daniell")
?spec.pgram(des, log="no", kernel = "Daniell")
per<-spec.pgram(des, log="no", kernel = "daniell")
per<-spec.pgram(des, log="no", kernel("daniell") )
per<-spec.pgram(des, log="no", kernel("daniell", c(5,7)) )
per<-spec.pgram(des, log="no", kernel("daniell", c(1,1)) )
per<-spec.pgram(des, log="no", kernel("daniell.modifiqued", c(1,1)) )
per<-spec.pgram(des, log="no", kernel("daniell", c(2,2)) )
per<-spec.pgram(des, log="no", kernel("daniell", c(0,0)) )
?spec.pgram
per<-spec.pgram(des, log="no", kernel("modified.daniell", c(5,7)) )
per<-spec.pgram(des, log="no", kernel("modified.daniell", c(1,1)) )
per<-spec.pgram(des, log="no", kernel("modified.daniell", c(0,0)) )
per<-spec.pgram(des, log="no", kernel("modified.daniell", c(1,1)) )
g1<-(max(P))/(sum(P))
n=226
pv1<-n*(1-g1)^(n-1)
pv1
g2<-(max(P[1:15])/(sum(P)-max(P)))
plot(f, P, type="l", xlab="Frequency", ylab="", main="Periodograma");grid()
pv2<-(n-1)*(1-g2)^(n-2)
pv2
points(x=f1, y=max(P), pch = 21, bg="white", lwd=3)
points(x=f2, y=max(P[1:15]), pch = 21, bg="black", lwd=3)
T1=1/f1
T1
T2=1/f2
T2
T2/12
P2=which.max(P[1:15]) #Frecuencia Secundaria
f2=f[P2]
f2
(T1=1/f1) # Ciclo anual
(T2=1/f2) # Ciclo debido al fenomeno del nino
(T1=1/f1) # Ciclo anual (MESES)
(T1=1/f1) # Ciclo anual (MESES)
(T2=1/f2) # Ciclo debido al fenomeno del nino (MESES)
(T2=1/f2)/12 # Ciclo debido al fenomeno del nino (MESES)
(T2=1/f2) # Ciclo debido al fenomeno del nino (MESES)
P1
P3=which.max(P[45:100]) #Frecuencia Secundaria
P3=which.max(P[45:100]) #Frecuencia Secundaria
f3=f[P3]
P3
max(P[45:100])
P3=which.max(P[45:100]) #Frecuencia Secundaria
f3=f[P3]
g3<-(max(P[45:100])/(sum(P)-max(P)-max(P[1:15])))
pv3<-(n-3)*(1-g3)^(n-3) #Periodo significativo
(pv3<-(n-3)*(1-g3)^(n-3)) #Periodo significativo
per<-spec.pgram(des, log="no", kernel("modified.daniell", c(1,1)) )
suma2<-a1+a2+a3+rnorm(1024)
x<-1:1024
a1<-1.5*sin(pi*x/6) #T1=2pi/(pi/6)=12
a2<-3*sin(pi*x/12)  #T2=2pi/(pi/12)=24
a3<-5*sin(pi*x/24)  #T3=2pi/(pi/24)=48
par(mfrow=c(2,2))
plot.ts(a1, ylim=c(-4.5,4.5))
plot.ts(a2, ylim=c(-4.5,4.5),col="blue")
plot.ts(a3, ylim=c(-4.5,4.5),col="red")
plot.ts(a1, ylim=c(-4.5,4.5))
par(mfrow=c(2,2))
plot.ts(a1, ylim=c(-5,5))
plot.ts(a2, ylim=c(-5,5),col="blue")
plot.ts(a3, ylim=c(-5,5),col="red")
plot.ts(a1, ylim=c(-5,5))
lines(a2, col="blue")
lines(a3, col="red")
suma<-a1+a2+a3
par(mfrow=c(2,1))
plot.ts(suma)
per<-spec.pgram(suma, log="no") # Grafica da densidade espectral estimada
per<-spec.pgram(suma, log="no") # Grafica da densidade espectral estimada
f1<-which.max(per$spec) #Posicion de la frecuencia
wmax1<-per$freq[f1] # Em qual freq atinge o maximo
(T1<-1/wmax1) #Para calcular o periodo principal
f2<-which.max(per$spec[-c(f1)])
wmax2<-per$freq[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
xx1<-per$freq[70:100]
yy1<-per$spec[70:100]
plot(xx1,yy1, type="l")
f3<-which.max(yy1)
wmax3<-xx1[f3] # Em qual freq atinge o maximo
(T3<-1/wmax3) #Para calcular o periodo principal
suma2<-a1+a2+a3+rnorm(1024, sd=5)
par(mfrow=c(2,1))
plot.ts(suma2)
per<-spec.pgram(suma, log="no") # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no") # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no") # Grafica da densidade espectral estimada
per$freq # Freqs donde se calculan as Densidades espectrales
per$spec # Densidades espectrales estimadas
wmax<-per$freq[which.max(per$spec)] # Em qual freq atinge o maximo
(s<-1/wmax) #Para calcular o periodo principal
suma2<-a1+a2+a3+rnorm(1024, sd=5)
par(mfrow=c(2,1))
plot.ts(suma2)
per<-spec.pgram(suma2, log="no") # Grafica da densidade espectral estimada
per$freq # Freqs donde se calculan as Densidades espectrales
per$spec # Densidades espectrales estimadas
f1<-which.max(per$spec) #Posicion de la frecuencia
wmax1<-per$freq[f1] # Em qual freq atinge o maximo
(T1<-1/wmax1) #Para calcular o periodo principal
f2<-which.max(per$spec[-c(f1)])
wmax2<-per$freq[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
suma<-a1+a2+a3
par(mfrow=c(2,1))
plot.ts(suma)
per<-spec.pgram(suma, log="no") # Grafica da densidade espectral estimada
names(per)
f1<-which.max(per$spec) #Posicion de la frecuencia
wmax1<-per$freq[f1] # Em qual freq atinge o maximo
(T1<-1/wmax1) #Para calcular o periodo principal
f2<-which.max(per$spec[-c(f1)])
wmax2<-per$freq[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
xx1<-per$freq[70:100]
yy1<-per$spec[70:100]
plot(xx1,yy1, type="l")
f3<-which.max(yy1)
wmax3<-xx1[f3] # Em qual freq atinge o maximo
(T3<-1/wmax3) #Para calcular o periodo principal
suma2<-a1+a2+a3+rnorm(1024, sd=5)
plot.ts(suma2)
per<-spec.pgram(suma2, log="no") # Grafica da densidade espectral estimada
f1<-which.max(per$spec) #Posicion de la frecuencia
wmax1<-per$freq[f1] # Em qual freq atinge o maximo
(T1<-1/wmax1) #Para calcular o periodo principal
f2<-which.max(per$spec[-c(f1)])
wmax2<-per$freq[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
xx1<-per$freq[70:100]
yy1<-per$spec[70:100]
plot(xx1,yy1, type="l")
f3<-which.max(yy1)
wmax3<-xx1[f3] # Em qual freq atinge o maximo
(T3<-1/wmax3) #Para calcular o periodo principal
suma<-a1+a2+a3
par(mfrow=c(2,1))
plot.ts(suma)
per<-spec.pgram(suma, log="no") # Grafica da densidade espectral estimada
names(per)
per$freq # Freqs donde se calculan as Densidades espectrales
per$spec # Densidades espectrales estimadas
f1<-which.max(per$spec) #Posicion de la frecuencia
wmax1<-per$freq[f1] # Em qual freq atinge o maximo
(T1<-1/wmax1) #Para calcular o periodo principal
f2<-which.max(per$spec[-c(f1)])
wmax2<-per$freq[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
xx1<-per$freq[70:100]
yy1<-per$spec[70:100]
plot(xx1,yy1, type="l")
f3<-which.max(yy1)
wmax3<-xx1[f3] # Em qual freq atinge o maximo
(T3<-1/wmax3) #Para calcular o periodo principal
suma2<-a1+a2+a3+rnorm(1024, sd=5)
par(mfrow=c(2,1))
plot.ts(suma2)
per<-spec.pgram(suma2, log="no") # Grafica da densidade espectral estimada
per$freq # Freqs donde se calculan as Densidades espectrales
per$spec # Densidades espectrales estimadas
f1<-which.max(per$spec) #Posicion de la frecuencia
wmax1<-per$freq[f1] # Em qual freq atinge o maximo
(T1<-1/wmax1) #Para calcular o periodo principal
xx1<-per$freq[70:100]
yy1<-per$spec[70:100]
plot(xx1,yy1, type="l")
f3<-which.max(yy1)
wmax3<-xx1[f3] # Em qual freq atinge o maximo
(T3<-1/wmax3) #Para calcular o periodo principal
per<-spec.pgram(suma2, log="no") # Grafica da densidade espectral estimada
f1<-which.max(per$spec) #Posicion de la frecuencia
wmax1<-per$freq[f1] # Em qual freq atinge o maximo
(T1<-1/wmax1) #Para calcular o periodo principal
f2<-which.max(per$spec[-c(f1)])
per<-spec.pgram(suma2, log="no") # Grafica da densidade espectral estimada
f1
per$freq # Freqs donde se calculan as Densidades espectrales
f2<-which.max(per$spec[25:512])
f2
wmax2<-per$freq[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
wmax2
f2<-which.max(per$spec[21:512])
wmax2<-per$freq[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
wmax2<-per$freq[f2] # Em qual freq atinge o maximo
wmax2
(T2<-1/wmax2) #Para calcular o periodo principal
zz1<-per$freq[21:100]
ww1<-per$spec[21:100]
plot(zz1,ww1, type="l")
zz1<-per$freq[25:100]
ww1<-per$spec[25:100]
plot(zz1,ww1, type="l")
f2<-which.max(per$spec[25:512])
f2<-which.max(per$spec[25:512])
wmax2<-per$freq[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
f2<-which.max(per$spec[25:512])
wmax2<-ww1[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
f2<-which.max(ww1[25:512])
wmax2<-zz1[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
wmax2
per<-spec.pgram(suma2, log="no", kernel("daniel")) # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no", kernel("daniel", c(5,7))) # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no", kernel("modified.daniel", c(5,5))) # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no", kernel("modified.daniel")) # Grafica da densidade espectral estimada
suma2<-a1+a2+a3+rnorm(1024, sd=2)
par(mfrow=c(2,1))
plot.ts(suma2)
per<-spec.pgram(suma2, log="no", kernel("modified.daniel")) # Grafica da densidade espectral estimada
?spec.pgram
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(5,7))) # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(1,1))) # Grafica da densidade espectral estimada
suma2<-a1+a2+a3+rnorm(1024, sd=2)
par(mfrow=c(2,1))
plot.ts(suma2)
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(1,1))) # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(1,1))) # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(1,1))) # Grafica da densidade espectral estimada
f1<-which.max(per$spec) #Posicion de la frecuencia
wmax1<-per$freq[f1] # Em qual freq atinge o maximo
(T1<-1/wmax1) #Para calcular o periodo principal
zz1<-per$freq[25:100]
ww1<-per$spec[25:100]
plot(zz1,ww1, type="l")
f2<-which.max(ww1[25:512])
wmax2<-zz1[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
xx1<-per$freq[70:100]
yy1<-per$spec[70:100]
plot(xx1,yy1, type="l")
f3<-which.max(yy1)
wmax3<-xx1[f3] # Em qual freq atinge o maximo
(T3<-1/wmax3) #Para calcular o periodo principal
f1<-which.max(per$spec) #Posicion de la frecuencia
wmax1<-per$freq[f1] # Em qual freq atinge o maximo
(T1<-1/wmax1) #Para calcular o periodo principal
zz1<-per$freq[25:100]
ww1<-per$spec[25:100]
plot(zz1,ww1, type="l")
max(ww1[25:512])
ww1<-per$spec[25:100]
max(ww1[25:512])
zz1<-per$freq[25:100]
ww1<-per$spec[25:100]
ww1
max(ww1[25:100])
zz1<-per$freq[25:100]
ww1<-per$spec[25:100]
plot(zz1,ww1, type="l")
max(ww1[25:100])
f2<-which.max(ww1[25:100])
f2
f2<-which.max(ww1)
max(ww1)
wmax2<-zz1[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
xx1<-per$freq[70:100]
yy1<-per$spec[70:100]
plot(xx1,yy1, type="l")
f3<-which.max(yy1)
wmax3<-xx1[f3] # Em qual freq atinge o maximo
(T3<-1/wmax3) #Para calcular o periodo principal
suma2<-a1+a2+a3+rnorm(1024, sd=5)
par(mfrow=c(2,1))
plot.ts(suma2)
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(1,1))) # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(1,1))) # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no") # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(1,1))) # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(2,2))) # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(2,1))) # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no", kernel("modified.daniell", c(1,2))) # Grafica da densidade espectral estimada
per<-spec.pgram(suma2, log="no") # Grafica da densidade espectral estimada
f1<-which.max(per$spec) #Posicion de la frecuencia
wmax1<-per$freq[f1] # Em qual freq atinge o maximo
(T1<-1/wmax1) #Para calcular o periodo principal
zz1<-per$freq[25:100]
ww1<-per$spec[25:100]
plot(zz1,ww1, type="l")
f2<-which.max(ww1)
wmax2<-zz1[f2] # Em qual freq atinge o maximo
(T2<-1/wmax2) #Para calcular o periodo principal
xx1<-per$freq[70:100]
yy1<-per$spec[70:100]
plot(xx1,yy1, type="l")
f3<-which.max(yy1)
wmax3<-xx1[f3] # Em qual freq atinge o maximo
(T3<-1/wmax3) #Para calcular o periodo principal
